(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{127:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return y}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=a.a.createContext({}),l=function(e){var n=a.a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):p({},n,{},e)),t},u=function(e){var n=l(e.components);return a.a.createElement(i.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),u=l(t),m=r,y=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return t?a.a.createElement(y,p({ref:n},i,{components:t})):a.a.createElement(y,p({ref:n},i))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,c=new Array(o);c[0]=m;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,c[1]=p;for(var i=2;i<o;i++)c[i]=t[i];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},95:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return p})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return l}));var r=t(1),a=t(6),o=(t(0),t(127)),c={title:"Scratchpad"},p={id:"examples/scratchpad",title:"Scratchpad",description:"```js",source:"@site/docs/examples/scratchpad.md",permalink:"/gen/docs/examples/scratchpad",lastUpdatedAt:1579999538},s=[],i={rightToc:s};function l(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},i,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const score = new Gen()\n\nconst melody1 = {\n  pitches: [A0, A0, A1, A1],\n  durations: [QN, QN, QN, QN]\n}\n\nconst melody2 = {\n  pitches: [B0, B0, B1, B1],\n  durations: [QN, QN, QN, QN]\n}\n\nconst piano = score\n  .part('piano')\n  .phrase('melody1', melody1)\n  .phrase('melody2', melody2)\n\nscore.on('bar:1', (req, res) => {\n  piano.phrase('melody1').play()\n})\n\nscore.on('bar:5', (req, res) => {\n  piano\n    .phrase('melody2')\n    .reverse()\n    .play()\n})\n\nscore.every('bar', (req, res) => {\n  piano\n    .phrase('melody2')\n    .reverse()\n    .play()\n})\n\nscore.play(108)\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const app = gen()\n\nconst pitches = [A0, A0, A1, A1]\nconst durations = [QN, QN, QN, QN]\n\nconst piano = app.part('piano').add(pitches, durations)\n\napp.beat(1, (req, res) => {\n  piano.play().repeat(2)\n})\n\napp.play(108)\napp.stop()\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const { Score, Part, Phrase, pitches, durations } = gen\nconst { A0, A1 } = pitches\nconst { QN } = durations\n\nconst score = new Score(108)\n\nconst piano = new Part('piano')\n\nconst pitches1 = [A0, A0, A1, A1]\nconst durations1 = [QN, QN, QN, QN]\n\nconst theme = new Phrase()\n  .add(pitches1, durations1)\n  .startAt(0)\n  .repeat(2)\n\npiano.add(theme)\n\nscore.add(piano).play()\n")))}l.isMDXComponent=!0}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{110:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n(1),r=(n(0),n(140));const o={title:"Music"},i={id:"primers/music",title:"Music",description:"> TODO",source:"@site/docs/primers/music.md",permalink:"/tuplet/docs/primers/music",sidebar:"main",previous:{title:"Generative",permalink:"/tuplet/docs/primers/generative"},next:{title:"JavaScript",permalink:"/tuplet/docs/primers/javascript"}},c=[{value:"Scales",id:"scales",children:[]},{value:"Definitions",id:"definitions",children:[]}],l={rightToc:c};function s({components:e,...t}){return Object(r.b)("wrapper",Object(a.a)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"TODO")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Remember, music consists of sequences (i.e., lists) of events.")),Object(r.b)("p",null,"Here we explain the building blocks of music: melody, harmony and rhythm."),Object(r.b)("p",null,"Melody, harmony, rhythm, compare with functions + primitives."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Scales"),Object(r.b)("li",{parentName:"ul"},"Chords"),Object(r.b)("li",{parentName:"ul"},"Rhythm"),Object(r.b)("li",{parentName:"ul"},"Tempo/BPM/beat"),Object(r.b)("li",{parentName:"ul"},"Human heart beat"),Object(r.b)("li",{parentName:"ul"},"Signature BPMs (house 120, hip hop 90, dnb 140)"),Object(r.b)("li",{parentName:"ul"},"Time signature"),Object(r.b)("li",{parentName:"ul"},"Note lengths"),Object(r.b)("li",{parentName:"ul"},"Instruments")),Object(r.b)("h2",{id:"scales"},"Scales"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Western classical 12 note scale (do re me fa so la ti do)"),Object(r.b)("li",{parentName:"ul"},"Major, minor"),Object(r.b)("li",{parentName:"ul"},"Other scales (Dorian etc, church, jazz)"),Object(r.b)("li",{parentName:"ul"},"Non-western"),Object(r.b)("li",{parentName:"ul"},"Microtonal")),Object(r.b)("h2",{id:"definitions"},"Definitions"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Pitch: a pitch consists of a pitch class and an octave. For example, A4\nrepresents the pitch class A in the fourth octave."),Object(r.b)("li",{parentName:"ul"},"Pitch Class: the pitch class A consists of the As in all octaves."),Object(r.b)("li",{parentName:"ul"},"Note: a note is a pitch combined with a duration"),Object(r.b)("li",{parentName:"ul"},"Rest:"),Object(r.b)("li",{parentName:"ul"},"Score:"),Object(r.b)("li",{parentName:"ul"},"Part:"),Object(r.b)("li",{parentName:"ul"},"Phrase:"),Object(r.b)("li",{parentName:"ul"},"Octave:")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"where a piece of music is represented as a score, that score has several parts\n(e.g., a flute part and a percussion part), each part contains phrases (e.g.,\nmelodies, riffs, grooves, sequences, patterns), and each phrase is made up of\na series of one or more notes (individual sound events).")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"The collection of notes from one pitch to the next one of the same name, say\nC4 to C5, is an octave. All the notes within an octave (including sharps or\nflats) make up the notes of the \u201cchromatic\u201d scale (12 notes).")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"A note in Python consists of pitch, duration, dynamic (volume), and panning\nposition")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"In music theory, a phrase refers to a grouping of consecutive notes. A phrase\ntypically contains a melody\u2014a linear list of notes that acts as a musical\nunit.")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"For convenience, Python also defines meaningful names (constants) for pitches.\nPitch constants consist of a letter (C, D, E, F, G, A, or B) followed by the\noctave (or register) of the pitch. For example, middle C is C4.")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"In Python, dynamic values are integers. They range from 0 to 127. This follows\nthe MIDI standard, which represents dynamics (or velocity) from 0 (silence) to\n127 (loudest).")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Creating Notes The most basic musical structure in the Python music library is\na note. Python notes have the following attributes: \u2022 pitch\u2014an integer from 0\n(low) to 127 (high) \u2022 duration\u2014a positive real number (quarter note is 1.0) \u2022\ndynamic\u2014(or volume) an integer from 0 (silent) to 127 (loudest) \u2022 panning\u2014a\nreal number from 0.0 (left) to 1.0 (right) To create a note, we specify its\npitch, duration, dynamic, and panning position, as follows: Note(pitch,\nduration, dynamic, panning) where dynamic and panning are optional. If\nomitted, dynamic is set to 85 and panning to 0.5 (center).")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Distinctive parameters for notes are pitch, duration and velocity;")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"In most computer music systems of algorithmic composition, the parameters\npitch, duration, and dynamics may be manipulated;")))}s.isMDXComponent=!0},140:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),u=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},p=function(e){var t=u(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,h=p["".concat(i,".").concat(m)]||p[m]||b[m]||o;return n?r.a.createElement(h,c({ref:t},s,{components:n})):r.a.createElement(h,c({ref:t},s))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);